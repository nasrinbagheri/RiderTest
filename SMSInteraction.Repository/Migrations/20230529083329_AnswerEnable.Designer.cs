// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMSInteraction.Repository;

#nullable disable

namespace SMSInteraction.Repository.Migrations
{
    [DbContext(typeof(SmsInteractionDbContext))]
    [Migration("20230529083329_AnswerEnable")]
    partial class AnswerEnable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMSInteraction.Domain.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("SmsInteractionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SmsInteractionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SMSInteraction.Domain.SmsInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationUtcDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DisabledUtcDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EnabledUtcDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InteractionType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("SmsInteractions");

                    b.HasDiscriminator<int>("InteractionType").IsComplete(false);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SMSInteraction.Domain.Contest", b =>
                {
                    b.HasBaseType("SMSInteraction.Domain.SmsInteraction");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("SMSInteraction.Domain.Survey", b =>
                {
                    b.HasBaseType("SMSInteraction.Domain.SmsInteraction");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("SMSInteraction.Domain.Answer", b =>
                {
                    b.HasOne("SMSInteraction.Domain.SmsInteraction", "SmsInteraction")
                        .WithMany("Answers")
                        .HasForeignKey("SmsInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SmsInteraction");
                });

            modelBuilder.Entity("SMSInteraction.Domain.SmsInteraction", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
